#include <cstdlib>
#include "client.h"
#include "location.h"
#include <vector>
#include <string>

using namespace std;

#ifndef CLIENT_CC
#define CLIENT_CC


//client constructor with id first and last name
Client::Client(const int _id, const string fName, const string lName){
    id = _id;
    firstName = fName;
    lastName = lName;
}

/***********************************************************************************************************************************************
* Process: returns client's id
* Parameter: None
*************************************************************************************************************************************************/
int Client::getId() const{
    return id;
}

/***********************************************************************************************************************************************
* Process: sets client's id
* Parameter: new ID
*************************************************************************************************************************************************/
void Client::setId(int _id){
    id = _id;
}

/***********************************************************************************************************************************************
* Process: returns client's first name
* Parameter: None
*************************************************************************************************************************************************/
string Client::getFirstName() const{
    return firstName;
}

/***********************************************************************************************************************************************
* Process: returns client's last name
* Parameter: None
*************************************************************************************************************************************************/
string Client::getLastName() const{
    return lastName;
}

/***********************************************************************************************************************************************
* Process: returns a reference of all the packages sent to this client
* Parameter: None
*************************************************************************************************************************************************/
const vector<int>& Client::getSentPackages() const{
    return sentPackages;
}

/***********************************************************************************************************************************************
* Process: returns a reference of all packages recieved by this client
* Parameter: None
*************************************************************************************************************************************************/
const vector<int>& Client::getRecievedPackages() const{
    return recievedPackages;
}

/***********************************************************************************************************************************************
* Process: sets client's first name
* Parameter: client's new first name 
*************************************************************************************************************************************************/
void Client::setFirstName(const string fName){
    firstName = fName;
}

/***********************************************************************************************************************************************
* Process: sets client's last name
* Parameter: client's new last name 
*************************************************************************************************************************************************/
void Client::setLastName(const string lName){
    lastName = lName;
}


/***********************************************************************************************************************************************
* Process: stores the package this client sent
* Parameter: package id 
*************************************************************************************************************************************************/
void Client::addSentPackage(const int id)
{
    sentPackages.push_back(id);
}

/***********************************************************************************************************************************************
* Process: stores the new package this client recieved
* Parameter: package id 
*************************************************************************************************************************************************/
void Client::addRecievedPackage(const int id)
{
    recievedPackages.push_back(id);
}

/***********************************************************************************************************************************************
* Process: returns a the memory location to this client's location object
* Parameter: location object with the address in it
*************************************************************************************************************************************************/
location*& Client::getAddress(){
    return address;
}

/***********************************************************************************************************************************************
* Process: sets the memory location to this client's location object
* Parameter: location object with the address in it
*************************************************************************************************************************************************/
void Client::setAddress(location* adrs){
    address = adrs;
}


#endif
